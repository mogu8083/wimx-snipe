version: "3.7"

services:

  # Server
  server1:
    build:
      dockerfile: ./dockerfile-server
    #image: wimx2-snipe:latest
    container_name: "wimx2-snipe-server1"
    volumes:
      - "${ROOT_PATH}/data/snipe2/logs:/data/logs"
      - "${BUILD_PATH}:/run"
    ports:
      - "36080:36080" # HTTP
      - "37080:37080" # TCP
      - "36666:36666" # JMX
    environment:
      - JVM_OPTS=-Dcom.sun.management.jmxremote=true
                -Dcom.sun.management.jmxremote.local.only=false
                -Dcom.sun.management.jmxremote.port=36666
                -Dcom.sun.management.jmxremote.ssl=false
                -Dcom.sun.management.jmxremote.authenticate=false
                -Djava.rmi.server.hostname=10.10.0.90
                -Dcom.sun.management.jmxremote.rmi.port=36666
                -Dspring.profiles.active=dev-server
                -Dtcp.port=37080
                -Dserver.type=server
                -Xms1G -Xmx2G
                -Dio.netty.leakDetectionLevel=advanced
                -Dio.netty.noPreferDirect=true
                #-Dio.netty.allocator.type=unpooled
                #-Dio.netty.allocator.chunkSize=0
#         - JVM_OPTS=-Dspring.profiles.active=dev-server
#                    -Dio.netty.noPreferDirect=true
#                    -Dio.netty.leakDetectionLevel=advanced
#                    -Dtcp.port=37080
#                    -Dserver.type=server

#    depends_on:
      #- influxdb
      #- haproxy
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 4G
    networks:
      default_bridge:
        ipv4_address: 172.20.0.11
#    extra_hosts:
#      - "external-host:host-gateway"
    stdin_open: true
    tty: true

  client:
    build:
      dockerfile: ./dockerfile-client
    container_name: "wimx2-snipe-client"
    volumes:
      - "${BUILD_PATH}:/run"
    environment:
      - JVM_OPTS=-Dspring.profiles.active=local-client
        -Dtcp.port=37080
        -Dtcp.ip=172.20.0.11
        -Ddevice.suffix=Z
        -Dthread.count=6000
    depends_on:
      - server1
      #- haproxy
    networks:
      default_bridge:
        ipv4_address: 172.20.0.12
#    extra_hosts:
#      - "external-host:host-gateway"
    stdin_open: true
    tty: true

#  server2:
#    #    networks:
#    #      broker-net:
#    #        ipv4_address: 10.10.0.250
#
#    build: .
#    #image: wimx2-snipe:latest
#    container_name: "wimx2-snipe-server2"
#    volumes:
#      - "${ROOT_PATH}/data/snipe2/logs:/data/logs"
#      - "${WORK_PATH}/build/libs/snipe.jar:/run/snipe.jar"
#    ports:
#      - "36084:36080" # HTTP
#      - "37084:37080" # TCP
#      #- "36666:36666" # JMX
#    environment:
#      #     - JVM_OPTS=-Dcom.sun.management.jmxremote=true
#      #               -Dcom.sun.management.jmxremote.local.only=false
#      #               -Dcom.sun.management.jmxremote.port=36666
#      #               -Dcom.sun.management.jmxremote.ssl=false
#      #               -Dcom.sun.management.jmxremote.authenticate=false
#      #               -Djava.rmi.server.hostname=10.10.0.90
#      #               -Dcom.sun.management.jmxremote.rmi.port=36666
#      #               -Dspring.profiles.active=dev-server
#      #               -Dtcp.port=37080
#      #               -Dserver.type=server
#        - JVM_OPTS=-Dspring.profiles.active=dev-server -Dtcp.port=37080 -Dserver.type=server
#    depends_on:
#      - influxdb
#      - haproxy
#    deploy:
#      resources:
#        limits:
#          cpus: "2"
#          memory: 4G
#    networks:
#      default_bridge:
#        ipv4_address: 172.20.0.6
#    stdin_open: true
#    tty: true


#  influxdb:
#    #image: influxdb:1.8.10
#    build: src/main/resources/docker/influxdb/.
#    container_name: "wimx2-influxdb"
#    ports:
#      - "8086:8086"
#      - "8088:8088"
#      - "7086:7086/udp"
#    volumes:
#      - ${ROOT_PATH}/data/influxdb:/var/lib/influxdb
#      - ${WORK_PATH}/src/main/resources/docker/influxdb/conf/influxdb.conf:/etc/influxdb/influxdb.conf
#      - ${WORK_PATH}/src/main/resources/docker/influxdb/scripts:/docker-entrypoint-initdb.d
#    networks:
#      default_bridge:
#        ipv4_address: 172.20.0.3
#    stdin_open: true
#    tty: true

#  redis:
#    build: src/main/resources/docker/redis/.
#    container_name: "wimx2-redis"
#    ports:
#      - "6379:6379"
#    networks:
#      default_bridge:
#        ipv4_address: 172.20.0.4
#    volumes:
#      - "${WORK_PATH}/src/main/resources/docker/redis/conf:/usr/local/etc/redis"
#    command: redis-server /usr/local/etc/redis/redis.conf
#  haproxy:
#    #image: haproxy:2.6
#    build: src/main/resources/docker/haproxy/.
#    container_name: "wimx2-haproxy"
#    ports:
#      - "37080:37080"
#      - "39000:39000"
#    #restart: always
#    #user: haproxy
#    volumes:
#      - ${WORK_PATH}/src/main/resources/docker/haproxy/conf/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
#    #command: haproxy -f /usr/local/etc/haproxy/haproxy.cfg; /bin/bash;
#    networks:
#      default_bridge:
#        ipv4_address: 172.20.0.4


# Network
networks:
  default_bridge:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16